<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.donut.prokindonutsweb.outbound.mapper.OutboundMapper">

    <!-- 출고 목록 반환-->
    <select id="selectAllOutboundList" resultType="com.donut.prokindonutsweb.outbound.dto.OutboundDTO">
        SELECT
        o.outboundCode,
        p.productCode,
        p.productName,
        o.outboundDate,
        o.vehicleCode,
        od.franchiseCode,
        o.outboundStatus
        FROM outbound o
        JOIN inventory i ON o.inventoryCode = i.inventoryCode
        JOIN product p ON i.productCode = p.productCode
        JOIN orderdetail odd ON o.orderDetailCode = odd.orderDetailCode
        JOIN `order` od ON od.orderCode = odd.orderCode
        WHERE i.warehouseCode = #{warehouseCode}
    </select>

    <!-- 출고요청 목록 반환-->
    <select id="selectApprovalOutboundList" resultType="com.donut.prokindonutsweb.outbound.dto.OutboundDTO">
        SELECT
        o.outboundCode,
        p.productCode,
        p.productName,
        o.outboundDate,
        od.franchiseCode,
        o.outboundStatus,
        o.quantity
        FROM outbound o
        JOIN inventory i ON o.inventoryCode = i.inventoryCode
        JOIN product p ON i.productCode = p.productCode
        JOIN orderdetail odd ON o.orderDetailCode = odd.orderDetailCode
        JOIN `order` od ON od.orderCode = odd.orderCode
        WHERE i.warehouseCode = #{warehouseCode}
        AND o.outboundStatus = "출고대기"
    </select>

    <!-- 출고준비 목록 반환-->
    <select id="selectCompletionOutboundList" resultType="com.donut.prokindonutsweb.outbound.dto.OutboundDTO">
        SELECT
        o.outboundCode,
        p.productCode,
        p.productName,
        o.outboundDate,
        od.franchiseCode,
        o.outboundStatus,
        o.quantity
        FROM outbound o
        JOIN inventory i ON o.inventoryCode = i.inventoryCode
        JOIN product p ON i.productCode = p.productCode
        JOIN orderdetail odd ON o.orderDetailCode = odd.orderDetailCode
        JOIN `order` od ON od.orderCode = odd.orderCode
        WHERE i.warehouseCode = #{warehouseCode}
        AND o.outboundStatus = "출고준비"
    </select>

    <!-- 출고코드로 상품 보관타입 반환-->
    <select id="selectStoredType" resultType="String">
        SELECT p.storedType
        FROM outbound o
        JOIN inventory i ON o.inventoryCode = i.inventoryCode
        JOIN product p ON i.productCode = p.productCode
        WHERE o.outboundCode = #{outboundCode}
    </select>

    <!-- 출고코드로 상품 제품수량 반환-->
    <select id="selectQuantity" resultType="int">
        SELECT quantity
        FROM outbound
        WHERE outboundCode = #{outboundCode}
    </select>

    <!-- 재고 존재 확인 반환-->
    <select id="checkInventory" resultType="boolean">
        select case
        when COUNT(*) = SUM(CASE when i.quantity >= o.quantity THEN 1 ELSE 0 END)
        THEN TRUE
        ELSE FALSE
        END AS IsAllProductEnough
        from outbound o, Inventory i
        Where o.outboundCode = #{outboundCode}
    </select>

    <!--    출고상태 변경 (-> 출고준비)-->
    <update id="approveOutbound">
        update outbound set outboundStatus = "출고준비" where outboundCode = #{outboundCode}
    </update>

    <!--    출고상태 변경 (-> 출고완료)-->
    <update id="completionOutbound">
        update outbound set outboundStatus = "출고완료" where outboundCode = #{outboundCode}
    </update>

    <!--    재고차감 (출고승인) -->
    <update id="updateInventory">
        UPDATE Inventory i
        JOIN Outbound o ON i.inventoryCode = o.inventoryCode
        SET i.quantity = i.quantity - o.quantity
        WHERE o.outboundCode = #{outboundCode}
    </update>

    <!--    멤버코드 -> 창고코드 반환-->
    <select id="getWarehouseCode" resultType="String">
        select warehouseCode from Warehouse where memberCode = #{memberCode}
    </select>

    <!--   섹션복원 (출고완료) -->
    <update id="updateSection">
        update SECTION set storageCapacity = storageCapacity + #{quantity}
        where sectionCode = #{sectionCode}
    </update>


    <!--섹션코드 존재여부 확인-->
    <select id="checkSection" resultType="boolean">
        select case
        when exists(select 1 from section where sectionCode = #{sectionCode})
        then true
        else false
        end
    </select>

</mapper>