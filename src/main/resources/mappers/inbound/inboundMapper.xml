<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.donut.prokindonutsweb.mappers.inbound.InboundMapper">

    <select id="selectAllProductList" resultType="com.donut.prokindonutsweb.dto.inbound.ProductVO">
        select productCode, productName, productPrice, storedType from product
    </select>

    <insert id="insertInbound">
        Insert into inbound (inboundCode, inboundDate, inboundStatus, warehouseCode)
        values (#{inboundCode},#{inboundDate},#{inboundStatus}, #{warehouseCode})
    </insert>

    <insert id="insertInboundDetailList" parameterType="java.util.List">
        INSERT INTO inboundDetail ( inboundDetailCode, quantity, inboundCode, productCode, sectionCode )
        VALUES
        <foreach collection="list" item="detail" separator=",">
            (
            #{detail.inboundDetailCode},
            #{detail.quantity},
            #{detail.inboundCode},
            #{detail.productCode},
            #{detail.sectionCode}
            )
        </foreach>
    </insert>

    <select id="selectInboundCode" resultType="String">
        Select inboundCode From Inbound Order by CAST(substring(inboundCode, 3) AS UNSIGNED) DESC LIMIT 1
    </select>

<!--    창고관리자 - 입고관리-->

<!--    입고목록 반환-->
    <select id="selectAllInboundList" resultType="com.donut.prokindonutsweb.dto.inbound.InboundVO">
        select inboundCode, inboundDate, inboundStatus, warehouseCode from Inbound
    </select>

<!--    입고상세 목록 반환-->
    <select id="selectAllInboundList" resultType="com.donut.prokindonutsweb.dto.inbound.InboundDetailVO">
        select inboundDetailCode, quantity, inboundCode, productCode, sectionCode from InboundDetail
    </select>

    <sql id="search">
        <if test="(types != null and keyword != null)">
            <foreach collection="types" item="type" open=" and ( " separator="OR" close=")">
                <choose>
                    <when test='type.equals("T")'>
                        title like concat('%',#{keyword},'%')
                    </when>
                    <when test='type.equals("C")'>
                        content like concat('%',#{keyword},'%')
                    </when>
                    <when test='type.equals("W")'>
                        writer like concat('%',#{keyword},'%')
                    </when>
                </choose>
            </foreach>
        </if>
    </sql>
</mapper>